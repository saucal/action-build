name: "Checkout and Build"
description: ""
inputs:
  path:
    description: "Path"
    required: true
  satis_key:
    description: "SatisPress Key (packages.saucal.com)"
    required: false
    default: ''
  node_version:
    description: "The Node version for actions/setup-node"
    required: false
    default: '16'
  php_version:
    description: "The PHP version for actions/setup-php"
    required: false
    default: 'latest'
  php_extensions:
    description: "The extensions parameter for actions/setup-php"
    required: false
    default: 'mbstring'
  composer_version:
    description: "The Composer version for actions/setup-php"
    required: false
    default: 'v2'
  validate-composer:
    description: "Validate composer?"
    required: false
    default: 'true'
    
runs:
  using: "composite"
  steps:
    - uses: "shivammathur/setup-php@v2"
      if: ${{ hashFiles( '**/composer.json' ) != '' }}
      with:
        php-version: "${{ inputs.php_version }}"
        tools: "composer:${{ inputs.composer_version }}"
        extensions: "${{ inputs.php_extensions }}"

    - name: Get composer store directory
      if: ${{ hashFiles( '**/composer.json' ) != '' }}
      id: composer-cache-setup
      shell: bash
      run: |
        echo "cache_dir=$(composer global config cache-dir)" >> "$GITHUB_OUTPUT"
        echo "hash=${{ hashFiles( '**/composer.json', '**/composer.lock' ) }}" >> "$GITHUB_OUTPUT"

    - name: Cache composer
      if: ${{ hashFiles( '**/composer.json' ) != '' }}
      id: cache-composer
      uses: actions/cache/restore@v4
      env:
        cache-name: cache-composer
      with:
        path: ${{ steps.composer-cache-setup.outputs.cache_dir }}
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ steps.composer-cache-setup.outputs.hash }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-

    - uses: actions/setup-node@v3
      if: ${{ hashFiles( '**/package.json' ) != '' }}
      with:
        node-version: ${{ inputs.node_version }}

    - uses: pnpm/action-setup@v2.0.1
      if: ${{ hashFiles( '**/pnpm-lock.yaml' ) != '' }}
      name: Install pnpm
      id: pnpm-install
      with:
        version: 6

    - name: Get npm store directory
      if: ${{ hashFiles( '**/package.json' ) != '' }}
      id: npm-cache-setup
      shell: bash
      run: |
        if [ "${{ hashFiles( '**/pnpm-lock.yaml' ) != '' }}" == "true" ]; then
          echo "cache_dir=$(pnpm store path)" >> "$GITHUB_OUTPUT"
          echo "hash=${{ hashFiles( '**/package.json', '**/pnpm-lock.yaml' ) }}" >> "$GITHUB_OUTPUT"
        else
          echo "cache_dir=~/.npm" >> "$GITHUB_OUTPUT"
          echo "hash=${{ hashFiles( '**/package.json', '**/package-lock.json' ) }}" >> "$GITHUB_OUTPUT"
        fi

    - name: Cache node modules
      if: ${{ hashFiles( '**/package.json' ) != '' }}
      id: cache-npm
      uses: actions/cache/restore@v4
      env:
        cache-name: cache-node-modules
      with:
        path: ${{ steps.npm-cache-setup.outputs.cache_dir }}
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ steps.npm-cache-setup.outputs.hash }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-

    - name: Maybe Build And Cleanup
      shell: bash
      env:
        BUILD_DIR: ${{ inputs.path }}
        SATIS_KEY: ${{ inputs.satis_key }}
        VALIDATE_COMPOSER: ${{ inputs.validate-composer }}
      run: "${{ github.action_path }}/maybe-build.sh"

    - name: Save Composer Cache
      id: cache-composer-save
      if: steps.cache-composer.outputs.cache-hit != 'true'
      uses: actions/cache/save@v4
      with:
        key: ${{ steps.cache-composer.outputs.cache-primary-key }}
        path: ${{ steps.composer-cache-setup.outputs.cache_dir }}

    - name: Save NPM Cache
      id: cache-npm-save
      if: steps.cache-npm.outputs.cache-hit != 'true'
      uses: actions/cache/save@v4
      with:
        key: ${{ steps.cache-npm.outputs.cache-primary-key }}
        path: ${{ steps.npm-cache-setup.outputs.cache_dir }}
